name: Build Buyer & Merchant APK (release)

on:
  workflow_dispatch:
  push:
    paths:
      - "Soma_demo_app_foad/buyer-app/**"
      - "Soma_demo_app_foad/merchant-app/**"
      - ".github/workflows/flutter_build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: buyer
            dir: Soma_demo_app_foad/buyer-app
            artifact: buyer-app-release.apk
            pkg: buyer_app
          - name: merchant
            dir: Soma_demo_app_foad/merchant-app
            artifact: merchant-app-release.apk
            pkg: merchant_app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter (stable 3.24.x)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: stable
          cache: true

      - name: Verify pubspec exists
        run: |
          test -f "${{ matrix.dir }}/pubspec.yaml" || (echo "❌ pubspec.yaml not found at ${{ matrix.dir }}" && exit 1)

      # 🔧 Regen with explicit project-name to avoid dash issue
      - name: Regenerate Android scaffold (safe mode)
        working-directory: ${{ matrix.dir }}
        run: |
          flutter create --platforms android --org ir.soma.demo --project-name ${{ matrix.pkg }} .
          chmod +x android/gradlew

      - name: Get dependencies
        working-directory: ${{ matrix.dir }}
        run: flutter pub get

      # sanity check to ensure intl pin exists if using it (non-blocking if not found)
      - name: Sanity check intl pin
        working-directory: ${{ matrix.dir }}
        run: |
          (grep -q "intl: *\\^0\\..*\\>" pubspec.yaml && echo "intl pinned") || true

      - name: Build APK (release)
        working-directory: ${{ matrix.dir }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          flutter build apk --release
          ls -lah build/app/outputs/flutter-apk

      - name: Prepare artifact
        working-directory: ${{ matrix.dir }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/${{ matrix.name }}
          cp build/app/outputs/flutter-apk/app-release.apk \
             $GITHUB_WORKSPACE/artifacts/${{ matrix.name }}/${{ matrix.artifact }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}.apk
          path: artifacts/${{ matrix.name }}/**/*.apk
          if-no-files-found: error
