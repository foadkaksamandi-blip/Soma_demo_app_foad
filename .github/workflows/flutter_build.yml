name: Build Buyer & Merchant APK (release)

on:
  workflow_dispatch:
  push:
    paths:
      - "Soma_demo_app_foad/**"
      - ".github/workflows/flutter_build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - id: buyer
            dir: Soma_demo_app_foad/buyer-app
            artifact: buyer-app-release.apk
          - id: merchant
            dir: Soma_demo_app_foad/merchant-app
            artifact: merchant-app-release.apk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter (stable 3.24.x)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: stable
          cache: true

      - name: Verify pubspec exists
        run: |
          test -f "${{ matrix.app.dir }}/pubspec.yaml" || (echo "‚ùå pubspec.yaml not found" && exit 1)

      - name: Regenerate Android scaffold (safe mode)
        working-directory: ${{ matrix.app.dir }}
        run: |
          APP_NAME="${{ matrix.app.id }}_app"
          flutter create --platforms android --org ir.soma.demo --project-name ${APP_NAME} --overwrite
          chmod +x android/gradlew
          echo "‚úÖ Android scaffold regenerated for ${APP_NAME}"

      - name: Get dependencies
        working-directory: ${{ matrix.app.dir }}
        run: flutter pub get

      - name: Ensure compileSdkVersion for Flutter plugins
        shell: bash
        run: |
          CACHE_DIR="${PUB_CACHE:-$HOME/.pub-cache}/hosted"
          echo "üîç Checking Flutter plugin cache at: $CACHE_DIR"
          if [ -d "$CACHE_DIR" ]; then
            find "$CACHE_DIR" -path "*/android/build.gradle" -print0 | while IFS= read -r -d '' f; do
              if ! grep -q "compileSdkVersion" "$f"; then
                echo -e "\nandroid { compileSdkVersion 34 }\n" >> "$f"
                echo "‚úÖ Patched: $f"
              fi
            done
          else
            echo "‚ö†Ô∏è No Flutter cache found, skipping patch."
          fi

      - name: Build APK (release)
        working-directory: ${{ matrix.app.dir }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          flutter build apk --release
          ls -lah build/app/outputs/flutter-apk

      - name: Prepare artifact
        if: success()
        working-directory: ${{ matrix.app.dir }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/${{ matrix.app.id }}
          cp build/app/outputs/flutter-apk/app-release.apk $GITHUB_WORKSPACE/artifacts/${{ matrix.app.id }}/${{ matrix.app.artifact }}

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app.id }}.apk
          path: artifacts/${{ matrix.app.id }}/${{ matrix.app.artifact }}
          if-no-files-found: error
