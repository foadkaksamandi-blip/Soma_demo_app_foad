name: Build Buyer & Merchant APK (release)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - id: buyer
            dir: Soma_demo_app_foad/buyer-app
            artifact: buyer-app-release.apk
          - id: merchant
            dir: Soma_demo_app_foad/merchant-app
            artifact: merchant-app-release.apk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter (stable 3.24.x)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: stable
          cache: true

      - name: Verify pubspec exists
        run: |
          test -f "${{ matrix.app.dir }}/pubspec.yaml" || (echo "❌ pubspec.yaml not found" && exit 1)

      # ایجاد پروژه موقت و کپی فقط android/ (جلوگیری از تداخل)
      - name: Regenerate Android scaffold (safe)
        run: |
          APP_NAME="${{ matrix.app.id }}_app"
          SRC="${{ matrix.app.dir }}"
          TMP="/tmp/${APP_NAME}"
          rm -rf "$TMP"
          flutter create --platforms android --org ir.soma.demo --project-name ${APP_NAME} "$TMP"
          rsync -a --delete "$TMP/android/" "$SRC/android/"
          chmod +x "$SRC/android/gradlew"
          echo "✅ Android scaffold refreshed for ${APP_NAME}"

      - name: Get dependencies
        working-directory: ${{ matrix.app.dir }}
        run: flutter pub get

      # پچ کردن پلاگین‌ها برای AGP 8+: حذف ارجاع‌های flutter.* و ست‌کردن SDK ها
      - name: Patch Flutter plugins for AGP 8+
        shell: bash
        run: |
          set -e
          CACHE_DIR="${PUB_CACHE:-$HOME/.pub-cache}/hosted"
          echo "🔍 Cache root: $CACHE_DIR"
          if [ ! -d "$CACHE_DIR" ]; then
            echo "⚠️ No Flutter cache found; skipping plugin patch."
            exit 0
          fi

          mapfile -t TARGETS < <(find "$CACHE_DIR" -path "*/android/build.gradle" -print)
          for f in "${TARGETS[@]}"; do
            echo "Patching: $f"

            # اگر فایل settings.gradle کَسِ پلاگین نیاز به pluginManagement داشته باشد، رها می‌کنیم (اکثراً لازم نیست)

            # تزریق dev.flutter.flutter-gradle-plugin در صورت نبود
            if ! grep -q "dev.flutter.flutter-gradle-plugin" "$f"; then
              awk 'BEGIN{ins=0}
                   NR==1{print "plugins { id \"com.android.library\"; id \"dev.flutter.flutter-gradle-plugin\" }"; ins=1}
                   {print $0}' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
            fi

            # جایگزینی ارجاع‌های flutter.*
            sed -i 's/compileSdkVersion[[:space:]]\+flutter\.[^)\n]*/compileSdkVersion 34/g' "$f"
            sed -i 's/targetSdkVersion[[:space:]]\+flutter\.[^)\n]*/targetSdkVersion 34/g' "$f"
            sed -i 's/minSdkVersion[[:space:]]\+flutter\.[^)\n]*/minSdkVersion 21/g' "$f"
            sed -i 's/ndkVersion[[:space:]]\+flutter\.[^)\n]*/ndkVersion "25.1.8937393"/g' "$f"

            # برخی پلاگین‌ها داخل android { … }، property ناشناخته‌ای به نام flutter.* می‌گذارند
            # خط‌های باقی‌مانده محتمل را کامنت می‌کنیم تا Gradle خطا ندهد
            sed -i 's/^\([[:space:]]*\)\(.*flutter\..*\)$/\1\/\/ \2/g' "$f"
          done
          echo "✅ Plugins patched."

      - name: Build APK (release)
        working-directory: ${{ matrix.app.dir }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          flutter build apk --release
          ls -lah build/app/outputs/flutter-apk

      - name: Prepare artifact
        if: success()
        working-directory: ${{ matrix.app.dir }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/${{ matrix.app.id }}
          cp build/app/outputs/flutter-apk/app-release.apk $GITHUB_WORKSPACE/artifacts/${{ matrix.app.id }}/${{ matrix.app.artifact }}

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app.id }}.apk
          path: artifacts/${{ matrix.app.id }}/${{ matrix.app.artifact }}
          if-no-files-found: error
